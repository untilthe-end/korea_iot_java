package org.example.chapter08;

// === 추상 클래스 vs 인터페이스 === //
// 1) 추상 클래스
//      : 공통적인 기능을 제공하는 '부분적 구현'
//      - 구성 요소: 추상 메서드, 구현 메서드, 필드, 생성자 (객체 집적적 생성 불가!)
//      - 단일 상속만 가능! (extends, 확장하다)
//      > 기본 구현을 제공 & 확장 가능

// 2) 인터페이스
//      : 클래스의 행동을 정의
//      - 구성 요소: 추상 메서드, 상수, 디폴트 메서드, 정적 메서드
//      - 다중 구현 가능! (implements, 구현하다)
//      > 객체가 해야할 동작(행위)을 정의한 약속

// Ex) 색칠도구(인터페이스) - 색연필, 물감, 싸인펜(구현 클래스)
//      악기 - 피아노, 드럼, 기타
//      캐릭터 - 마법사, 궁수, 전사
// >> 공통된 기능이 있지만, 방식이 다름

// 인터페이스의 목적
// - 약속(규약)을 통해 모두가 같은 규칙으로 사용
// - 다양한 방식으로 동작하지만 사용하는 방법은 동일
// - 유지보수와 확장성 향상

public class C_Interface {

}
